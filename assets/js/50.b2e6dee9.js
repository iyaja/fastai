(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{380:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"distributed-and-parallel-training"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#distributed-and-parallel-training"}},[t._v("#")]),t._v(" Distributed and parallel training")]),t._v(" "),s("blockquote",[s("p",[t._v("Callbacks and helper functions to train in parallel or use distributed training")])]),t._v(" "),s("h2",{attrs:{id:"parallel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parallel"}},[t._v("#")]),t._v(" Parallel")]),t._v(" "),s("p",[t._v("Patch the parallel models so they work with RNNs")]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"DataParallel.reset"}},[s("code",[t._v("DataParallel.reset")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L12"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("DataParallel.reset")]),t._v("()")])]),t._v(" "),s("h2",{staticClass:"doc_header",attrs:{id:"ParallelTrainer"}},[s("code",[t._v("class")]),t._v(" "),s("code",[t._v("ParallelTrainer")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L18"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("ParallelTrainer")]),t._v("("),s("strong",[s("code",[t._v("device_ids")])]),t._v(") :: "),s("RouterLink",{attrs:{to:"/callback.core.html#Callback"}},[s("code",[t._v("Callback")])])],1)]),t._v(" "),s("p",[t._v("Basic class handling tweaks of the training loop by changing a "),s("RouterLink",{attrs:{to:"/learner.html#Learner"}},[s("code",[t._v("Learner")])]),t._v(" in various events")],1),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"Learner.to_parallel"}},[s("code",[t._v("Learner.to_parallel")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L25"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Learner.to_parallel")]),t._v("("),s("strong",[s("code",[t._v("device_ids")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(")")])]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"Learner.detach_parallel"}},[s("code",[t._v("Learner.detach_parallel")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L31"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Learner.detach_parallel")]),t._v("()")])]),t._v(" "),s("p",[t._v("Remove ParallelTrainer callback from Learner.")]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"Learner.parallel_ctx"}},[s("code",[t._v("Learner.parallel_ctx")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L38"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Learner.parallel_ctx")]),t._v("("),s("strong",[s("code",[t._v("device_ids")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(")")])]),t._v(" "),s("p",[t._v("A context manager to adapt a learner to train in data parallel mode.")]),t._v(" "),s("h2",{attrs:{id:"distributed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#distributed"}},[t._v("#")]),t._v(" Distributed")]),t._v(" "),s("p",[t._v("Patch the parallel models so they work with RNNs")]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"DistributedDataParallel.reset"}},[s("code",[t._v("DistributedDataParallel.reset")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L49"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("DistributedDataParallel.reset")]),t._v("()")])]),t._v(" "),s("p",[t._v("Convenience functions to set up/tear down torch distributed data parallel mode.")]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"setup_distrib"}},[s("code",[t._v("setup_distrib")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L54"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("setup_distrib")]),t._v("("),s("strong",[s("code",[t._v("gpu")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(")")])]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"teardown_distrib"}},[s("code",[t._v("teardown_distrib")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L63"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("teardown_distrib")]),t._v("()")])]),t._v(" "),s("h3",{attrs:{id:"dataloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dataloader"}},[t._v("#")]),t._v(" DataLoader")]),t._v(" "),s("p",[t._v("We need to change the dataloaders so that they only get one part of the batch each (otherwise there is no point in using distributed training).")]),t._v(" "),s("h2",{staticClass:"doc_header",attrs:{id:"DistributedDL"}},[s("code",[t._v("class")]),t._v(" "),s("code",[t._v("DistributedDL")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L69"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("DistributedDL")]),t._v("("),s("strong",[s("code",[t._v("dataset")])]),t._v(", "),s("strong",[s("code",[t._v("rank")])]),t._v(", "),s("strong",[s("code",[t._v("world_size")])]),t._v(", "),s("strong",[s("code",[t._v("bs")])]),t._v("="),s("em",[s("code",[t._v("64")])]),t._v(", "),s("strong",[s("code",[t._v("shuffle")])]),t._v("="),s("em",[s("code",[t._v("False")])]),t._v(", "),s("strong",[s("code",[t._v("num_workers")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("verbose")])]),t._v("="),s("em",[s("code",[t._v("False")])]),t._v(", "),s("strong",[s("code",[t._v("do_setup")])]),t._v("="),s("em",[s("code",[t._v("True")])]),t._v(", "),s("strong",[s("code",[t._v("pin_memory")])]),t._v("="),s("em",[s("code",[t._v("False")])]),t._v(", "),s("strong",[s("code",[t._v("timeout")])]),t._v("="),s("em",[s("code",[t._v("0")])]),t._v(", "),s("strong",[s("code",[t._v("batch_size")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("drop_last")])]),t._v("="),s("em",[s("code",[t._v("False")])]),t._v(", "),s("strong",[s("code",[t._v("indexed")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("n")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("device")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("wif")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("before_iter")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("after_item")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("before_batch")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("after_batch")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("after_iter")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("create_batches")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("create_item")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("create_batch")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("retain")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("get_idxs")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("sample")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("shuffle_fn")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(", "),s("strong",[s("code",[t._v("do_batch")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(") :: "),s("RouterLink",{attrs:{to:"/data.core.html#TfmdDL"}},[s("code",[t._v("TfmdDL")])])],1)]),t._v(" "),s("p",[t._v("Transformed "),s("RouterLink",{attrs:{to:"/data.load.html#DataLoader"}},[s("code",[t._v("DataLoader")])])],1),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("_tmp_file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tempfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NamedTemporaryFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i tried putting this inside self / _broadcast to no avail")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# patch _broadcast with a mocked version so we can test DistributedDL w/o a proper DDP setup")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@patch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_broadcast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("DistributedDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LongTensor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" rank "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_tmp_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                 t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_tmp_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tolist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("dl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TfmdDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_workers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    dl1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DistributedDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    test_eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dl1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("52")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("dl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TfmdDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_workers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shuffle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    dl1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DistributedDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dl1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tolist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#All items should be sampled (we cannot test order b/c shuffle=True)")]),t._v("\ntest_eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unique"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fastai"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" WeightedDL\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("dl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WeightedDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_workers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shuffle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("wgts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    dl1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DistributedDL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dl1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tolist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("operator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all res >=25")]),t._v("\ntest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all res NOT < 25")]),t._v("\n")])])]),s("h2",{staticClass:"doc_header",attrs:{id:"DistributedTrainer"}},[s("code",[t._v("class")]),t._v(" "),s("code",[t._v("DistributedTrainer")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L111"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("DistributedTrainer")]),t._v("("),s("strong",[s("code",[t._v("cuda_id")])]),t._v("="),s("em",[s("code",[t._v("0")])]),t._v(") :: "),s("RouterLink",{attrs:{to:"/callback.core.html#Callback"}},[s("code",[t._v("Callback")])])],1)]),t._v(" "),s("p",[t._v("Basic class handling tweaks of the training loop by changing a "),s("RouterLink",{attrs:{to:"/learner.html#Learner"}},[s("code",[t._v("Learner")])]),t._v(" in various events")],1),t._v(" "),s("p",[t._v("Attach, remove a callback which adapts the model to use DistributedDL to train in distributed data parallel mode.")]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"Learner.to_distributed"}},[s("code",[t._v("Learner.to_distributed")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L137"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Learner.to_distributed")]),t._v("("),s("strong",[s("code",[t._v("cuda_id")])]),t._v(")")])]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"Learner.detach_distributed"}},[s("code",[t._v("Learner.detach_distributed")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L144"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Learner.detach_distributed")]),t._v("()")])]),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"Learner.distrib_ctx"}},[s("code",[t._v("Learner.distrib_ctx")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L152"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Learner.distrib_ctx")]),t._v("("),s("strong",[s("code",[t._v("cuda_id")])]),t._v("="),s("em",[s("code",[t._v("None")])]),t._v(")")])]),t._v(" "),s("p",[t._v("A context manager to adapt a learner to train in distributed data parallel mode.")]),t._v(" "),s("h3",{attrs:{id:"distrib-ctx-context-manager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#distrib-ctx-context-manager"}},[t._v("#")]),t._v(" "),s("code",[t._v("distrib_ctx")]),t._v(" context manager")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("distrib_ctx(cuda_id)")])]),t._v(" prepares a learner to train in distributed data parallel mode.  It assumes these "),s("a",{attrs:{href:"https://pytorch.org/tutorials/intermediate/dist_tuto.html#initialization-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("environment variables"),s("OutboundLink")],1),t._v(" have all been setup properly, such as those launched by "),s("code",[t._v("python -m fastai.launch")]),t._v(".")]),t._v(" "),s("h4",{attrs:{id:"typical-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typical-usage"}},[t._v("#")]),t._v(" Typical usage:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("with learn.distrib_ctx(): learn.fit(.....)\n")])])]),s("p",[t._v("It attaches a "),s("RouterLink",{attrs:{to:"/distributed.html#DistributedTrainer"}},[s("code",[t._v("DistributedTrainer")])]),t._v(" callback and "),s("RouterLink",{attrs:{to:"/distributed.html#DistributedDL"}},[s("code",[t._v("DistributedDL")])]),t._v(" data loader to  the learner, then executes "),s("code",[t._v("learn.fit(.....)")]),t._v(".  Upon exiting the context, it removes the "),s("RouterLink",{attrs:{to:"/distributed.html#DistributedTrainer"}},[s("code",[t._v("DistributedTrainer")])]),t._v(" and "),s("RouterLink",{attrs:{to:"/distributed.html#DistributedDL"}},[s("code",[t._v("DistributedDL")])]),t._v(", and destroys any locally created distributed process group.  The process is still attached to the GPU though.")],1),t._v(" "),s("h4",{staticClass:"doc_header",attrs:{id:"rank0_first"}},[s("code",[t._v("rank0_first")]),s("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/distributed.py#L171"}},[t._v("[source]")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("rank0_first")]),t._v("("),s("strong",[s("code",[t._v("func")])]),t._v(")")])]),t._v(" "),s("p",[t._v("Execute "),s("code",[t._v("func")]),t._v(" in the Rank-0 process first, then in other ranks in parallel.")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("rank0_first(f)")])]),t._v(" calls "),s("code",[t._v("f()")]),t._v(" in rank-0 process first, then in parallel on the rest, in distributed training mode. In single process, non-distributed training mode, "),s("code",[t._v("f()")]),t._v(" is called only once as expected.")]),t._v(" "),s("p",[t._v("One application of "),s("code",[t._v("rank0_first()")]),t._v(" is to make fresh downloads via "),s("code",[t._v("untar_data()")]),t._v(" safe in distributed training scripts launched by "),s("code",[t._v("python -m fastai.launch <script>")]),t._v(":")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("path = untar_data(URLs.IMDB)")])])]),t._v(" "),s("p",[t._v("becomes:> "),s("code",[t._v("path = "),s("b",[t._v("rank0_first(lambda:")]),t._v(" untar_data(URLs.IMDB))")])]),t._v(" "),s("p",[t._v("Some learner factory methods may use "),s("code",[t._v("untar_data()")]),t._v(" to "),s("strong",[t._v("download pretrained models")]),t._v(" by default:")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy)")])])]),t._v(" "),s("p",[t._v("becomes:> "),s("code",[t._v("learn = "),s("b",[t._v("rank0_first(lambda:")]),t._v(" text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy))")]),t._v("\nOtherwise, multiple processes will download at the same time and corrupt the data.")])])}),[],!1,null,null,null);a.default=r.exports}}]);