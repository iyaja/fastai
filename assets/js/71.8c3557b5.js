(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{377:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"learner-for-the-vision-applications"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#learner-for-the-vision-applications"}},[t._v("#")]),t._v(" Learner for the vision applications")]),t._v(" "),a("blockquote",[a("p",[t._v("All the functions necessary to build "),a("code",[t._v("Learner")]),t._v(" suitable for transfer learning in computer vision")])]),t._v(" "),a("p",[t._v("The most important functions of this module are "),a("RouterLink",{attrs:{to:"/vision.learner.html#cnn_learner"}},[a("code",[t._v("cnn_learner")])]),t._v(" and "),a("RouterLink",{attrs:{to:"/vision.learner.html#unet_learner"}},[a("code",[t._v("unet_learner")])]),t._v(". They will help you define a "),a("RouterLink",{attrs:{to:"/learner.html#Learner"}},[a("code",[t._v("Learner")])]),t._v(" using a pretrained model. See the "),a("a",{attrs:{href:"http://docs.fast.ai/tutorial.vision",target:"_blank",rel:"noopener noreferrer"}},[t._v("vision tutorial"),a("OutboundLink")],1),t._v(" for examples of use.")],1),t._v(" "),a("h2",{attrs:{id:"cut-a-pretrained-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cut-a-pretrained-model"}},[t._v("#")]),t._v(" Cut a pretrained model")]),t._v(" "),a("p",[t._v("By default, the fastai library cuts a pretrained model at the pooling layer. This function helps detecting it.")]),t._v(" "),a("h4",{staticClass:"doc_header",attrs:{id:"has_pool_type"}},[a("code",[t._v("has_pool_type")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L17"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("has_pool_type")]),t._v("("),a("strong",[a("code",[t._v("m")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Return "),a("code",[t._v("True")]),t._v(" if "),a("code",[t._v("m")]),t._v(" is a pooling layer or has one in its children")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sequential"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AdaptiveAvgPool2d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Linear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Conv2d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxPool3d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" has_pool_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest_eq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("has_pool_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" m_ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{staticClass:"doc_header",attrs:{id:"create_body"}},[a("code",[t._v("create_body")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L63"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("create_body")]),t._v("("),a("strong",[a("code",[t._v("arch")])]),t._v(", "),a("strong",[a("code",[t._v("n_in")])]),t._v("="),a("em",[a("code",[t._v("3")])]),t._v(", "),a("strong",[a("code",[t._v("pretrained")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("cut")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Cut off the body of a typically pretrained "),a("code",[t._v("arch")]),t._v(" as determined by "),a("code",[t._v("cut")])]),t._v(" "),a("p",[a("code",[t._v("cut")]),t._v(" can either be an integer, in which case we cut the model at the corresponding layer, or a function, in which case, this function returns "),a("code",[t._v("cut(model)")]),t._v(". It defaults to the first layer that contains some pooling otherwise.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("tst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" pretrained "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sequential"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Conv2d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BatchNorm2d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AvgPool2d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Linear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest_eq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cut"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest_eq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cut"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("noop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest_eq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \n    m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n_in"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    test_eq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_get_first_layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in_channels"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"head-and-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#head-and-model"}},[t._v("#")]),t._v(" Head and model")]),t._v(" "),a("h4",{staticClass:"doc_header",attrs:{id:"create_head"}},[a("code",[t._v("create_head")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L76"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("create_head")]),t._v("("),a("strong",[a("code",[t._v("nf")])]),t._v(", "),a("strong",[a("code",[t._v("n_out")])]),t._v(", "),a("strong",[a("code",[t._v("lin_ftrs")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("ps")])]),t._v("="),a("em",[a("code",[t._v("0.5")])]),t._v(", "),a("strong",[a("code",[t._v("concat_pool")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("bn_final")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("lin_first")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("y_range")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Model head that takes "),a("code",[t._v("nf")]),t._v(" features, runs through "),a("code",[t._v("lin_ftrs")]),t._v(", and out "),a("code",[t._v("n_out")]),t._v(" classes.")]),t._v(" "),a("p",[t._v("The head begins with fastai's "),a("RouterLink",{attrs:{to:"/layers.html#AdaptiveConcatPool2d"}},[a("code",[t._v("AdaptiveConcatPool2d")])]),t._v(" if "),a("code",[t._v("concat_pool=True")]),t._v(" otherwise, it uses traditional average pooling. Then it uses a "),a("RouterLink",{attrs:{to:"/layers.html#Flatten"}},[a("code",[t._v("Flatten")])]),t._v(" layer before going on blocks of "),a("RouterLink",{attrs:{to:"/layers.html#BatchNorm"}},[a("code",[t._v("BatchNorm")])]),t._v(", "),a("code",[t._v("Dropout")]),t._v(" and "),a("code",[t._v("Linear")]),t._v(" layers (if "),a("code",[t._v("lin_first=True")]),t._v(", those are "),a("code",[t._v("Linear")]),t._v(", "),a("RouterLink",{attrs:{to:"/layers.html#BatchNorm"}},[a("code",[t._v("BatchNorm")])]),t._v(", "),a("code",[t._v("Dropout")]),t._v(").")],1),t._v(" "),a("p",[t._v("Those blocks start at "),a("code",[t._v("nf")]),t._v(", then every element of "),a("code",[t._v("lin_ftrs")]),t._v(" (defaults to "),a("code",[t._v("[512]")]),t._v(") and end at "),a("code",[t._v("n_out")]),t._v(". "),a("code",[t._v("ps")]),t._v(" is a list of probabilities used for the dropouts (if you only pass 1, it will use half the value then that value as many times as necessary).")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("bn_final=True")]),t._v(", a final "),a("RouterLink",{attrs:{to:"/layers.html#BatchNorm"}},[a("code",[t._v("BatchNorm")])]),t._v(" layer is added. If "),a("code",[t._v("y_range")]),t._v(" is passed, the function adds a "),a("RouterLink",{attrs:{to:"/layers.html#SigmoidRange"}},[a("code",[t._v("SigmoidRange")])]),t._v(" to that range.")],1),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("tst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntst\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Sequential(\n  (0): AdaptiveConcatPool2d(\n    (ap): AdaptiveAvgPool2d(output_size=1)\n    (mp): AdaptiveMaxPool2d(output_size=1)\n  )\n  (1): Flatten(full=False)\n  (2): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (3): Dropout(p=0.25, inplace=False)\n  (4): Linear(in_features=5, out_features=512, bias=False)\n  (5): ReLU(inplace=True)\n  (6): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (7): Dropout(p=0.5, inplace=False)\n  (8): Linear(in_features=512, out_features=10, bias=False)\n)\n")])])]),a("h4",{staticClass:"doc_header",attrs:{id:"create_cnn_model"}},[a("code",[t._v("create_cnn_model")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L96"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("create_cnn_model")]),t._v("("),a("strong",[a("code",[t._v("arch")])]),t._v(", "),a("strong",[a("code",[t._v("n_out")])]),t._v(", "),a("strong",[a("code",[t._v("cut")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("pretrained")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("n_in")])]),t._v("="),a("em",[a("code",[t._v("3")])]),t._v(", "),a("strong",[a("code",[t._v("init")])]),t._v("="),a("em",[a("code",[t._v("kaiming_normal_")])]),t._v(", "),a("strong",[a("code",[t._v("custom_head")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("concat_pool")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("lin_ftrs")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("ps")])]),t._v("="),a("em",[a("code",[t._v("0.5")])]),t._v(", "),a("strong",[a("code",[t._v("bn_final")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("lin_first")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("y_range")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Create custom convnet architecture using "),a("code",[t._v("arch")]),t._v(", "),a("code",[t._v("n_in")]),t._v(" and "),a("code",[t._v("n_out")])]),t._v(" "),a("p",[t._v("The model is cut according to "),a("code",[t._v("cut")]),t._v(" and it may be "),a("code",[t._v("pretrained")]),t._v(", in which case, the proper set of weights is downloaded then loaded. "),a("code",[t._v("init")]),t._v(" is applied to the head of the model, which is either created by "),a("RouterLink",{attrs:{to:"/vision.learner.html#create_head"}},[a("code",[t._v("create_head")])]),t._v(" (with "),a("code",[t._v("lin_ftrs")]),t._v(", "),a("code",[t._v("ps")]),t._v(", "),a("code",[t._v("concat_pool")]),t._v(", "),a("code",[t._v("bn_final")]),t._v(", "),a("code",[t._v("lin_first")]),t._v(" and "),a("code",[t._v("y_range")]),t._v(") or is "),a("code",[t._v("custom_head")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("tst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_cnn_model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resnet18"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_cnn_model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resnet18"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n_in"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{staticClass:"doc_header",attrs:{id:"cnn_config"}},[a("code",[t._v("cnn_config")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L110"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("cnn_config")]),t._v("("),a("strong",[a("code",[t._v("cut")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("pretrained")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("n_in")])]),t._v("="),a("em",[a("code",[t._v("3")])]),t._v(", "),a("strong",[a("code",[t._v("init")])]),t._v("="),a("em",[a("code",[t._v("kaiming_normal_")])]),t._v(", "),a("strong",[a("code",[t._v("custom_head")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("concat_pool")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("lin_ftrs")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("ps")])]),t._v("="),a("em",[a("code",[t._v("0.5")])]),t._v(", "),a("strong",[a("code",[t._v("bn_final")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("lin_first")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("y_range")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Convenience function to easily create a config for "),a("RouterLink",{attrs:{to:"/vision.learner.html#create_cnn_model"}},[a("code",[t._v("create_cnn_model")])])],1),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("pets "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blocks"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ImageBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CategoryBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                 get_items"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("get_image_files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                 splitter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RandomSplitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 get_y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RegexLabeller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'/([^/]+)_\\d+.jpg$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataloaders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("untar_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("URLs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PETS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"images"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item_tfms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RandomResizedCrop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min_scale"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        batch_tfms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("aug_transforms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("224")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("@log_args had an issue on DataLoader.__init__ -> got an unexpected keyword argument 'item_tfms'\n@log_args had an issue on TfmdDL.__init__ -> got an unexpected keyword argument 'item_tfms'\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# class ModelSplitter():")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     def __init__(self, idx): self.idx = idx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     def split(self, m): return L(m[:self.idx], m[self.idx:]).map(params)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     def __call__(self,): return {'cut':self.idx, 'split':self.split}")]),t._v("\n")])])]),a("h4",{staticClass:"doc_header",attrs:{id:"default_split"}},[a("code",[t._v("default_split")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L116"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("default_split")]),t._v("("),a("strong",[a("code",[t._v("m")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Default split of a model between body and head")]),t._v(" "),a("p",[t._v("To do transfer learning, you need to pass a "),a("code",[t._v("splitter")]),t._v(" to "),a("RouterLink",{attrs:{to:"/learner.html#Learner"}},[a("code",[t._v("Learner")])]),t._v(". This should be a function taking the model and returning a collection of parameter groups, e.g. a list of list of parameters.")],1),t._v(" "),a("h2",{attrs:{id:"learner-convenience-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#learner-convenience-functions"}},[t._v("#")]),t._v(" "),a("RouterLink",{attrs:{to:"/learner.html#Learner"}},[a("code",[t._v("Learner")])]),t._v(" convenience functions")],1),t._v(" "),a("h4",{staticClass:"doc_header",attrs:{id:"cnn_learner"}},[a("code",[t._v("cnn_learner")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L164"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("cnn_learner")]),t._v("("),a("strong",[a("code",[t._v("dls")])]),t._v(", "),a("strong",[a("code",[t._v("arch")])]),t._v(", "),a("strong",[a("code",[t._v("loss_func")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("pretrained")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("cut")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("splitter")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("y_range")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("config")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("n_out")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("normalize")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("opt_func")])]),t._v("="),a("em",[a("code",[t._v("Adam")])]),t._v(", "),a("strong",[a("code",[t._v("lr")])]),t._v("="),a("em",[a("code",[t._v("0.001")])]),t._v(", "),a("strong",[a("code",[t._v("cbs")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("metrics")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("path")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("model_dir")])]),t._v("="),a("em",[a("code",[t._v("'models'")])]),t._v(", "),a("strong",[a("code",[t._v("wd")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("wd_bn_bias")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("train_bn")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("moms")])]),t._v("="),a("em",[a("code",[t._v("(0.95, 0.85, 0.95)")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Build a convnet style learner from "),a("code",[t._v("dls")]),t._v(" and "),a("code",[t._v("arch")])]),t._v(" "),a("p",[t._v("The model is built from "),a("code",[t._v("arch")]),t._v(" using the number of final activations inferred from "),a("code",[t._v("dls")]),t._v(" if possible (otherwise pass a value to "),a("code",[t._v("n_out")]),t._v("). It might be "),a("code",[t._v("pretrained")]),t._v(" and the architecture is cut and split using the default metadata of the model architecture (this can be customized by passing a "),a("code",[t._v("cut")]),t._v(" or a "),a("code",[t._v("splitter")]),t._v(").")]),t._v(" "),a("p",[t._v("To customize the model creation, use "),a("RouterLink",{attrs:{to:"/vision.learner.html#cnn_config"}},[a("code",[t._v("cnn_config")])]),t._v(" and pass the result to the "),a("code",[t._v("config")]),t._v(" argument. There is just easy access to "),a("code",[t._v("y_range")]),t._v(" because this argument is often used.")],1),t._v(" "),a("p",[t._v("If "),a("code",[t._v("normalize")]),t._v(" and "),a("code",[t._v("pretrained")]),t._v(" are "),a("code",[t._v("True")]),t._v(", this function adds a "),a("code",[t._v("Normalization")]),t._v(" transform to the "),a("code",[t._v("dls")]),t._v(" (if there is not already one) using the statistics of the pretrained model. That way, you won't ever forget to normalize your data in transfer learning.")]),t._v(" "),a("p",[t._v("All other arguments are passed to "),a("RouterLink",{attrs:{to:"/learner.html#Learner"}},[a("code",[t._v("Learner")])]),t._v(".")],1),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" untar_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("URLs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PETS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfnames "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_image_files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"images"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'^(.*)_\\d+.jpg$'")]),t._v("\ndls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ImageDataLoaders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_name_re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fnames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item_tfms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Resize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("224")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("learn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cnn_learner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resnet34"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loss_func"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CrossEntropyLossFlat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cnn_config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{staticClass:"doc_header",attrs:{id:"unet_config"}},[a("code",[t._v("unet_config")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L181"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("unet_config")]),t._v("("),a("strong",[a("code",[t._v("blur")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("blur_final")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("self_attention")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("y_range")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("last_cross")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("bottle")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("act_cls")])]),t._v("="),a("em",[a("code",[t._v("ReLU")])]),t._v(", "),a("strong",[a("code",[t._v("init")])]),t._v("="),a("em",[a("code",[t._v("kaiming_normal_")])]),t._v(", "),a("strong",[a("code",[t._v("norm_type")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Convenience function to easily create a config for "),a("RouterLink",{attrs:{to:"/vision.models.unet.html#DynamicUnet"}},[a("code",[t._v("DynamicUnet")])])],1),t._v(" "),a("h4",{staticClass:"doc_header",attrs:{id:"unet_learner"}},[a("code",[t._v("unet_learner")]),a("a",{staticClass:"source_link",staticStyle:{float:"right"},attrs:{href:"https://github.com/fastai/fastai/tree/master/fastai/vision/learner.py#L187"}},[t._v("[source]")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("unet_learner")]),t._v("("),a("strong",[a("code",[t._v("dls")])]),t._v(", "),a("strong",[a("code",[t._v("arch")])]),t._v(", "),a("strong",[a("code",[t._v("loss_func")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("pretrained")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("cut")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("splitter")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("config")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("n_in")])]),t._v("="),a("em",[a("code",[t._v("3")])]),t._v(", "),a("strong",[a("code",[t._v("n_out")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("normalize")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("opt_func")])]),t._v("="),a("em",[a("code",[t._v("Adam")])]),t._v(", "),a("strong",[a("code",[t._v("lr")])]),t._v("="),a("em",[a("code",[t._v("0.001")])]),t._v(", "),a("strong",[a("code",[t._v("cbs")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("metrics")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("path")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("model_dir")])]),t._v("="),a("em",[a("code",[t._v("'models'")])]),t._v(", "),a("strong",[a("code",[t._v("wd")])]),t._v("="),a("em",[a("code",[t._v("None")])]),t._v(", "),a("strong",[a("code",[t._v("wd_bn_bias")])]),t._v("="),a("em",[a("code",[t._v("False")])]),t._v(", "),a("strong",[a("code",[t._v("train_bn")])]),t._v("="),a("em",[a("code",[t._v("True")])]),t._v(", "),a("strong",[a("code",[t._v("moms")])]),t._v("="),a("em",[a("code",[t._v("(0.95, 0.85, 0.95)")])]),t._v(")")])]),t._v(" "),a("p",[t._v("Build a unet learner from "),a("code",[t._v("dls")]),t._v(" and "),a("code",[t._v("arch")])]),t._v(" "),a("p",[t._v("The model is built from "),a("code",[t._v("arch")]),t._v(" using the number of final filters inferred from "),a("code",[t._v("dls")]),t._v(" if possible (otherwise pass a value to "),a("code",[t._v("n_out")]),t._v("). It might be "),a("code",[t._v("pretrained")]),t._v(" and the architecture is cut and split using the default metadata of the model architecture (this can be customized by passing a "),a("code",[t._v("cut")]),t._v(" or a "),a("code",[t._v("splitter")]),t._v(").")]),t._v(" "),a("p",[t._v("To customize the model creation, use "),a("RouterLink",{attrs:{to:"/vision.learner.html#unet_config"}},[a("code",[t._v("unet_config")])]),t._v(" and pass the result to the "),a("code",[t._v("config")]),t._v(" argument.")],1),t._v(" "),a("p",[t._v("If "),a("code",[t._v("normalize")]),t._v(" and "),a("code",[t._v("pretrained")]),t._v(" are "),a("code",[t._v("True")]),t._v(", this function adds a "),a("code",[t._v("Normalization")]),t._v(" transform to the "),a("code",[t._v("dls")]),t._v(" (if there is not already one) using the statistics of the pretrained model. That way, you won't ever forget to normalize your data in transfer learning.")]),t._v(" "),a("p",[t._v("All other arguments are passed to "),a("RouterLink",{attrs:{to:"/learner.html#Learner"}},[a("code",[t._v("Learner")])]),t._v(".")],1),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" untar_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("URLs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CAMVID_TINY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfnames "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_image_files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'images'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("label_func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'labels'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("_P")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("suffix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),t._v("\ncodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadtxt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'codes.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dtype"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \ndls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SegmentationDataLoaders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_label_func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fnames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" label_func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" codes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("codes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("learn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unet_learner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resnet34"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loss_func"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CrossEntropyLossFlat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("axis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);